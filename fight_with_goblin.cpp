#include <cstdio>
#include <iostream>
#include <limits>
#include <ncurses.h>
#include <random>
#include <unistd.h>
#include <thread>
#include <chrono>
#include "Hero.hpp"
#include "Monsters.hpp"
#include "fight_with_goblin.hpp"

extern int rows, cols;
extern char** map;
extern std::mt19937 rnd;


void fight_with_goblin(Hero& h, Monsters& m)
{
    initscr();
    init_pair(6, COLOR_RED, -1);
    clear();
    refresh();
    mvprintw(rows / 2 - 15, cols / 2 - 21,"Fight to the death (Click faster). Dodge and attack !!!" );
    mvprintw(rows / 2 - 14, cols / 2 - 21,"      | Enemy is attacking | (a,b,c,...,x,y,z)");
    attron (A_BOLD | COLOR_PAIR(6));
    mvprintw(rows / 2 - 13, cols / 2 - 8,"----> ? <----");
    attroff (A_BOLD | COLOR_PAIR(6));
    refresh();
    mvprintw(rows / 2 - 12, cols / 2 - 21,"Instead of a symbol \"?\" press the button you see and do it quickly");   
    mvprintw(rows / 2 - 11, cols / 2 - 21,"             To continue, press any button.");
    refresh();

    std::this_thread::sleep_for(std::chrono::milliseconds(1000));
    flushinp(); // ignore input
    getch();
    
    char arr_battle[][26]
    {
        {' ',' ','H','E','R','O','!',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','G','O','B','L','I','N','!'},
        {' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ',' ',' ',' ',' ',' ','_','|','_',' ',' ',' ',' ',' ',' ',' ','_','|','_',' ',' ',' ',' ',' ',' '},
        {' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ','\\',' ','/',' ',' '},
        {' ',' ',' ',' ','@',' ',' ','*',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ','%',' ',' ',' '},
        {' ',' ',' ',' ','*',' ','*',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ','#',' ',' ',' '},
        {' ',' ',' ','*','*','*',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#','#','#',' ',' '},
        {' ',' ','*',' ','*',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ','#',' '},
        {' ','*',' ',' ','*',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ','#'},
        {' ',' ',' ',' ','*',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' '},
        {' ',' ',' ','*',' ','*',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ','#',' ',' '},
        {' ',' ','*',' ',' ',' ','*',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ','#',' '},
        {' ','*',' ',' ',' ',' ',' ','*',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ','#'},
        {'_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_'}
    };
    char arr_death_goblin[][26]
    {
        {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ',' ',' ',' ',' ','V','I','C','T','O','R','Y','!','!','!',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','\\',' ','/',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','%',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ',' ',' ','@',' ',' ','_','|','_','_','_','_','_','_',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ',' ',' ','*',' ',' ','*','|',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ',' ','*','*','*','*',' ',' ',' ',' ',' ','#','#','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ','*',' ','*',' ',' ',' ',' ',' ',' ','#',' ','#',' ','#',' ','_','|','_',' ',' ',' ',' ',' ',' '},
        {' ','*',' ',' ','*',' ',' ',' ',' ',' ','#',' ',' ','#',' ',' ','#',' ','|',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ',' ',' ','*',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ',' ','*',' ','*',' ',' ',' ',' ',' ',' ','#',' ','#',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ','*',' ',' ',' ','*',' ',' ',' ',' ',' ','#',' ',' ','#',' ',' ','|',' ',' ',' ',' ',' ',' ',' '},
        {' ','*',' ',' ',' ',' ',' ','*',' ',' ',' ',' ',' ','#',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {'_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_'}
    };
    char arr_death_hero[][26]
    {
        {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ',' ','Y','O','U',' ','A','R','E',' ','D','E','A','D','!',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ',' ',' ','@',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','\\',' ','/',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ',' ','_','_','_','_','_','_','|','_',' ',' ','%',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ',' ',' ','*',' ',' ',' ',' ','|','#',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ',' ','*','*','*',' ',' ',' ',' ',' ','#','#','#','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ','*',' ','*',' ','*',' ',' ',' ',' ',' ',' ','#',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ','*',' ',' ','*',' ',' ','*',' ',' ',' ',' ',' ','#',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ',' ',' ','*',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ',' ','*',' ','*',' ',' ',' ',' ',' ',' ','#',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ',' ','*',' ',' ',' ','*',' ',' ',' ',' ','#',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {' ','*',' ',' ',' ','*',' ',' ',' ',' ','#',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' '},
        {'_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_'}
    };

    int arr_y { sizeof(arr_battle) / sizeof(arr_battle[0]) };
    int arr_x { sizeof(arr_battle[0]) / sizeof(arr_battle[0][0]) };

    char button_hero{'!'};
    char button_goblin{'!'};;
    char *ptr_draw {&arr_battle[0][0]};  
    //char *ptr_draw {arr_battle[0]};  
    //char *end {arr_battle[0] + arr_y * arr_x - 1};
    clear();
    std::vector<std::string> timer {"one", "two", "three", "FIGHT"};
    for (int i{}; i < timer.size(); ++i)
    {
        mvprintw(rows / 2 - 13, cols / 2 - 7,"    %s    ", timer[i].c_str());
        refresh();
        std::this_thread::sleep_for(std::chrono::milliseconds(1000));
    }
    init_pair(6, COLOR_RED, -1);
    clear();

    std::uniform_real_distribution<> luck(97, 123);
    do 
    {

        for (int y{}; y < arr_y; ++y)
        {
            for (int x{}; x < arr_x; ++x)
            {
                if (rows >= arr_y && cols >= arr_x)
                {
                    mvaddch((rows - arr_y) / 2 + y, (cols - arr_x) / 2 + x , *(ptr_draw + y * arr_x + x));
                }
            }
        }

        //mvprintw(rows / 2 - 14, cols / 2 - 21,"Fight to the death (Click faster). Dodge and attack !!!" );
        //mvprintw(rows / 2 - 13, cols / 2 - 21,"          | Enemy is attacking |");
        mvprintw(rows / 2 + 10, cols / 2 - 21,"      HP = %d             HP = %d    ", h.get_lifes(), m.hp);

        button_goblin = luck(rnd);
        //mvaddstr(rows / 2 - 11, cols / 2 - 10, "------>  button_goblin <-------" | A_BOLD | COLOR_PAIR(1));
        attron (A_BOLD | COLOR_PAIR(6));
        mvprintw(rows / 2 - 12, cols / 2 - 8,"------> %c <------", button_goblin);
        attroff (A_BOLD | COLOR_PAIR(6));
        refresh();

        int SPEED {30};
        halfdelay(SPEED);

        std::this_thread::sleep_for(std::chrono::milliseconds(100));
        flushinp(); // ignore input

        button_hero =  getch(); // get 1, 2 or 3; char 1 = 49 char 2 = 50 char 3 = 51;

        if (button_hero == 27) // ESC exit loop
        {
            break; 
        }
        else if (button_hero == ERR)
        {
            button_hero = '?';
        }

        mvprintw(rows / 2 - 10, cols / 2 - 10, "hero    %c <> %c    goblin", button_hero, button_goblin); 

        if (m.hp == 0)
        {
            break;
        }
        else if (h.dead() == true)
        {
            break;
        }
        // rock = 1, snears = 2, paper = 3;
        else if (button_hero == button_goblin) 
        {
            mvprintw(rows / 2 - 9, cols / 2 - 7, "Lucky strike!!!  ");
            m.hp -= 1;
            if (m.hp == 0)
            {
                ptr_draw = &arr_death_goblin[0][0];
            }
        }
        else
        {
            mvprintw(rows / 2 - 9, cols / 2 - 7, "You hurt!!!    ");
            h.wound();
            if (h.dead())
            {
                ptr_draw = &arr_death_hero[0][0];
            }
        }
    } while (true); 
    attroff(A_BOLD);
    nocbreak();
    cbreak();

    endwin();
    return;
}

